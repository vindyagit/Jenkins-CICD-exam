apiVersion: apps/v1

kind: Deployment

metadata:

  name: movie-service

spec:

  replicas: {{ .Values.movieService.replicaCount }}

  selector:

    matchLabels:

      app: movie-service

  template:

    metadata:

      labels:

        app: movie-service

    spec:

      containers:

        - name: movie-service

          image: "{{ .Values.movieService.image.repository }} : {{ .Values.movieService.image.tag }}"

          imagePullPolicy: {{ .Values.movieService.image.pullPolicy }}

          ports:

            - containerPort: {{ .Values.movieService.port }}

          env:

            - name: DATABASE_URI

              value: "{{ .Values.movieService.env.DATABASE_URI }}"

            - name: CAST_SERVICE_HOST_URL

              value: "{{ .Values.movieService.env.CAST_SERVICE_HOST_URL }}"

---

apiVersion: apps/v1

kind: Deployment

metadata:

  name: cast-service

spec:

  replicas: {{ .Values.castService.replicaCount }}

  selector:

    matchLabels:

      app: cast-service

  template:

    metadata:

      labels:

        app: cast-service

    spec:

      containers:

        - name: cast-service

          image: "{{ .Values.castService.image.repository }}:{{ .Values.castService.image.tag }}"

          imagePullPolicy: {{ .Values.castService.image.pullPolicy }}

          ports:

            - containerPort: {{ .Values.castService.port }}

          env:

            - name: DATABASE_URI

              value: "{{ .Values.castService.env.DATABASE_URI }}"

---

apiVersion: apps/v1

kind: Deployment

metadata:

  name: nginx

spec:

  replicas: 1

  selector:

    matchLabels:

      app: nginx

  template:

    metadata:

      labels:

        app: nginx

    spec:

      containers:

        - name: nginx

          image: {{ .Values.nginx.image }}

          ports:

            - containerPort: {{ .Values.nginx.port }}

          volumeMounts:

            - name: nginx-config

              mountPath: /etc/nginx/conf.d/default.conf

              subPath: default.conf

      volumes:

        - name: nginx-config

          configMap:

            name: nginx-config

---

apiVersion: apps/v1

kind: Deployment

metadata:

  name: movie-db

spec:

  selector:

    matchLabels:

      app: movie-db

  template:

    metadata:

      labels:

        app: movie-db

    spec:

      containers:

        - name: movie-db

          image: {{ .Values.movieDb.image }}

          env:

            - name: POSTGRES_USER

              value: "{{ .Values.movieDb.username }}"

            - name: POSTGRES_PASSWORD

              value: "{{ .Values.movieDb.password }}"

            - name: POSTGRES_DB

              value: "{{ .Values.movieDb.database }}"

          volumeMounts:

            - name: data

              mountPath: /var/lib/postgresql/data

      volumes:

        - name: data

          persistentVolumeClaim:

            claimName: movie-db-pvc
---

apiVersion: apps/v1

kind: Deployment

metadata:

  name: cast-db

spec:

  selector:

    matchLabels:

      app: cast-db

  template:

    metadata:

      labels:

        app: cast-db

    spec:

      containers:

        - name: cast-db

          image: {{ .Values.movieDb.image }}

          env:

            - name: POSTGRES_USER

              value: "{{ .Values.castDb.username }}"

            - name: POSTGRES_PASSWORD

              value: "{{ .Values.castDb.password }}"

            - name: POSTGRES_DB

              value: "{{ .Values.castDb.database }}"

          volumeMounts:

            - name: data

              mountPath: /var/lib/postgresql/data

      volumes:

        - name: data

          persistentVolumeClaim:

            claimName: cast-db-pvc
